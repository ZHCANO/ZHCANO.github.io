<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo + GitHub Pages + 服务器搭建个人博客网站</title>
    <link href="/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p><strong>1. GitHub账号</strong></p><p>注册GitHub账号</p><p>GitHub官网：<a href="https://github.com/">https://github.com/</a></p><p><strong>2. 安装Git</strong></p><p>下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>安装方式：双击安装包，一直点next</p><p>安装完成后，鼠标右键任意位置，在右键菜单中选择<code>Git Bash Here</code>，弹出Git命令行，在命令行配置Git用户名和邮箱地址，以便区分不同提交者的身份。（注意：这里设置用户签名和将来登录GitHub的账号没有任何关系）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// 配置Git用户名和邮箱地址</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;用户名&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;邮箱&quot;</span><br><span class="hljs-comment">// 查看配置</span><br>cat ~/.gitconfig<br></code></pre></td></tr></table></figure><p><strong>3. 安装Node JS</strong></p><p>下载地址：<a href="https://nodejs.cn/download/">https://nodejs.cn/download/</a></p><p>安装方式：双击安装包，一直点next</p><p>安装完成后，打开cmd，输入<code>node -v</code>和<code>npm -v</code>，若显示对应版本号，则说明安装成功。</p><p>修改全局模块路径和缓存路径：</p><p>输入<code>npm -root -g</code>查看默认路径，默认路径在C:\Users\用户名\AppData\Roaming\npm\node_modules。</p><p>注意：此文件夹默认是隐藏的，需要设置显示隐藏的文件夹才能查看。</p><p>在nodejs安装目录中新建node_cache和node_global文件夹：</p><img src="./博客搭建/nodejs目录.jpg" style="zoom:80%;" /><p>修改全局模块路径和缓存路径为新建的这两个文件夹：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">set</span><span class="hljs-built_in"> prefix </span><span class="hljs-string">&quot;创建的node_global文件夹所在路径&quot;</span><br>npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;创建的node_cache文件夹所在路径&quot;</span><br></code></pre></td></tr></table></figure><p>修改完成后，配置环境变量，右键此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量</p><ol><li>在用户环境变量Path中添加node_global的路径</li><li>在系统变量中，新建变量名NODE_PATH，变量值为node_global的node_modules文件夹路径。</li></ol><h2 id="二、安装Hexo"><a href="#二、安装Hexo" class="headerlink" title="二、安装Hexo"></a>二、安装Hexo</h2><p>运行 Git Bash 并切换淘宝镜像（提高下载速度）</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-comment">// 全局切换命令</span><br>npm config set registry http:<span class="hljs-comment">//registry.npm.taobao.org/</span><br><span class="hljs-comment">// 查看版本命令</span><br>npm get registry<br><span class="hljs-comment">// 切回官方镜像</span><br>npm config set registry http:<span class="hljs-comment">//www.npmjs.org</span><br></code></pre></td></tr></table></figure><p>npm install 报错：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata">$ npm install hexo-<span class="hljs-keyword">cli</span> -<span class="hljs-keyword">g</span><br>npm <span class="hljs-keyword">ERR</span>! code EPERM<br>npm <span class="hljs-keyword">ERR</span>! syscall <span class="hljs-keyword">mkdir</span><br>npm <span class="hljs-keyword">ERR</span>! path <span class="hljs-keyword">D</span>:\DevelopTools\nodejs\node_global\node_modules<br>npm <span class="hljs-keyword">ERR</span>! errno -4048<br>npm <span class="hljs-keyword">ERR</span>! <span class="hljs-keyword">Error</span>: EPERM: operation not permitted, <span class="hljs-keyword">mkdir</span> &#x27;<span class="hljs-keyword">D</span>:\DevelopTools\nodejs\node_global\node_modules&#x27;<br></code></pre></td></tr></table></figure><p>解决方法：找到缓存位置，设置权限</p><img src="./博客搭建/nodejs权限.jpg" style="zoom: 67%;" /><p>创建blog项目：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">hexo init hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>本地启动：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo g<br>hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>此时，在浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以访问到hexo的默认页面了</p><h2 id="三、更换主题"><a href="#三、更换主题" class="headerlink" title="三、更换主题"></a>三、更换主题</h2><p><strong>1. 按照官方文档安装Fluid主题：<a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid官网</a></strong></p><p><strong>2. 按照官方配置指南完成自己想要的配置：<a href="https://hexo.fluid-dev.com/docs/guide/">配置指南</a></strong></p><h2 id="四、创建文章"><a href="#四、创建文章" class="headerlink" title="四、创建文章"></a>四、创建文章</h2><p>修改hexo-blog目录下_config.yml，在生成文章的时候生成一个同名的资源目录用于存放图片文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><strong>1. 创建各种页</strong></p><p>(1) 关于页：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about <span class="hljs-meta"># 在hexo-blog/source/about目录下生成index.md</span><br></code></pre></td></tr></table></figure><p>编辑index.md，添加<code>layout: about</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2023-11-08 11:51:44</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>(2) 分类页：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about categories<br></code></pre></td></tr></table></figure><p>添加<code>type: &quot;categories&quot;</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">title</span>: categories<br><span class="hljs-attribute">date</span>: <span class="hljs-number">2023</span>-<span class="hljs-number">12</span>-<span class="hljs-number">23</span> <span class="hljs-number">18</span>:<span class="hljs-number">26</span>:<span class="hljs-number">53</span><br><span class="hljs-attribute">type</span>: <span class="hljs-string">&quot;categories&quot;</span><br></code></pre></td></tr></table></figure><p>(3) 标签页：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about tags<br></code></pre></td></tr></table></figure><p>添加<code>type: &quot;tags&quot;</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">title</span>: tags<br><span class="hljs-attribute">date</span>: <span class="hljs-number">2023</span>-<span class="hljs-number">12</span>-<span class="hljs-number">23</span> <span class="hljs-number">18</span>:<span class="hljs-number">32</span>:<span class="hljs-number">39</span><br><span class="hljs-attribute">type</span>: <span class="hljs-string">&quot;tags&quot;</span><br></code></pre></td></tr></table></figure><p><strong>2. 创建文章</strong></p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-comment">// 执行完成后，在hexo-blog/source/_posts目录下生成一个测试文章.md和测试文章的文件夹（用于存放图片）</span><br>hexo <span class="hljs-keyword">new</span> <span class="hljs-type">post</span> 测试文章<br></code></pre></td></tr></table></figure><p>打开测试文章.md，添加如下内容，注意：<code>banner_img: /img/post.png</code>是文章顶部背景图片的路径，<code>categories:</code>是类别，<code>tags:</code>是标签。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">测试文章</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/post.png</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2023-11-08 12:01:42</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">C++</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">C++</span><br><span class="hljs-meta">---</span><br><span class="hljs-type">![](./</span><span class="hljs-string">测试文章/test.png)</span><br><span class="hljs-string">这是一篇测试文章</span><br></code></pre></td></tr></table></figure><p>配置在 Hexo 博客和 Markdown 编辑器中正确显示图片：</p><p>首先，根据 Hexo 官方文档，在 _config.yaml 将 post_asset_folder 选项设为 true 。然后，安装插件 hexo-image-link，安装命令为：</p><pre><code class="hljs">npm install hexo-image-link --save</code></pre><p>如果安装了 hexo-asset-img 插件，需要将其卸载：</p><pre><code class="hljs">$ npm uninstall --save hexo-asset-img</code></pre><p>配置向Typora文档粘贴图片时自动保存图片到同名文件夹：</p><img src="./博客搭建/image-20231224153239095.png" alt="image-20231224153239095" style="zoom:80%;" /><h2 id="五、将本地博客部署到GitHub-Pages"><a href="#五、将本地博客部署到GitHub-Pages" class="headerlink" title="五、将本地博客部署到GitHub Pages"></a>五、将本地博客部署到GitHub Pages</h2><p><strong>1. 在GitHub上创建仓库</strong></p><p>可参考<a href="https://princehao.cn/posts/blog001/">这篇博客的配置GitHubPages部分</a>，注意仓库名必须为<code>你的用户名.github.io</code></p><p><strong>2. Github配置ssh key</strong></p><p>原理：本地生成一个公私钥对，将公钥放到远程主机，当本地主机需要登录远程主机时，远程主机用公钥对对一个随机字符串加密，并将结果发回本地主机。本地主机用私钥解密，将内容发回到远程主机，远程主机对比传回的字符串与生成的字符串，如果相同则认证成功。（公钥可以理解为锁，私钥是钥匙）</p><p>(1) 打开git bash，生成ssh key</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ssh-keygen -t rsa   <span class="hljs-comment">// 生成公钥</span><br>cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub <span class="hljs-comment">// 复制公钥</span><br></code></pre></td></tr></table></figure><p>(2) Github账号上添加公钥</p><p>点击settings-&gt;SSH and GPG kyes-&gt;new ssh key，将刚刚生成的公钥粘贴进去</p><p>(3) 验证设置是否成功</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><img src="/2023/12/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20231225155759193.png" class="" title="image-20231225155759193"><p><strong>3. 将本地博客部署到GitHub Pages</strong></p><p>打开hexo-blog&#x2F;_config.yml，在deployment配置项下设置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">    type:</span> git<br><span class="hljs-symbol">    repo:</span> 此处复制仓库的SSH地址，如下图<br><span class="hljs-symbol">    branch:</span> master<br></code></pre></td></tr></table></figure><img src="./博客搭建/image-20231225201809703.png" alt="image-20231225201809703" style="zoom:80%;" /><p>git bash输入<code>hexo d</code></p><p>浏览器访问<code>https://zhcano.github.io/</code>，显示页面则部署成功。</p><h2 id="六、配置域名"><a href="#六、配置域名" class="headerlink" title="六、配置域名"></a>六、配置域名</h2><p><strong>1. 购买域名和服务器</strong></p><p>(1) 在腾讯云&#x2F;阿里云（下面以腾讯云为例）购买一个轻量级服务器，最便宜的大概200+</p><p>(2) 在腾讯云购买一个域名，最便宜的大概10元左右</p><p><strong>2. 国内网站需要ICP域名备案</strong></p><p>参考链接：<a href="https://blog.csdn.net/qq_62982856/article/details/133307488">域名备案流程（个人备案，腾讯云 &#x2F; 阿里云）</a></p><p>大概流程是：提交备案材料-&gt;腾讯云审核-&gt;管局审核</p><p>注意：必须先备案再域名解析，否则腾讯云会打电话通知删除域名解析。</p><p><strong>3. 域名解析</strong></p><p>参考链接：<a href="https://cloud.tencent.com/document/product/302/3446">云解析 DNS 快速添加域名解析-快速入门-文档中心-腾讯云 (tencent.com)</a></p><h2 id="七、将hexo推送到云服务器"><a href="#七、将hexo推送到云服务器" class="headerlink" title="七、将hexo推送到云服务器"></a>七、将hexo推送到云服务器</h2><p><strong>1. xshell远程连接服务器</strong></p><p><strong>2. 安装git和nginx</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">apt-get install nginx<br>apt-get install git<br></code></pre></td></tr></table></figure><p><strong>3. 添加git用户</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">adduser git   <span class="hljs-comment">#添加git用户</span><br><span class="hljs-built_in">chmod</span> 740 /etc/sudoers   <span class="hljs-comment">#改变sudoers文件的权限为文件所有者可写</span><br>vim /etc/sudoers   <br></code></pre></td></tr></table></figure><p>找到root ALL&#x3D;(ALL) ALL，在它下方加入一行</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>) <span class="hljs-keyword">ALL</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 400 /etc/sudoers   <span class="hljs-comment">#将其权限修改为文件所有者可读</span><br>sudo passwd git  <span class="hljs-comment">#设置git用户的密码</span><br></code></pre></td></tr></table></figure><p><strong>4. 给git用户添加ssh密钥</strong></p><p>使用<code>五、将本地博客部署到GitHub Pages</code>中生成的密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">su git <span class="hljs-comment">#切换到git用户</span><br><span class="hljs-built_in">mkdir</span> ~/.ssh  <span class="hljs-comment">#创建.ssh文件夹</span><br><span class="hljs-built_in">touch</span> ~/.ssh/authorized_keys  <span class="hljs-comment">#创建authorized_keys文件</span><br><span class="hljs-built_in">chmod</span> 600 ~/.ssh/authorized_keys  <span class="hljs-comment">#为authorized_keys文件赋予文件所有者可读可写的权限</span><br><span class="hljs-built_in">chmod</span> 700 ~/.ssh  <span class="hljs-comment">#为.ssh文件夹赋予文件夹所有者可读可写可执行的权限</span><br>vim ~/.ssh/authorized_keys <span class="hljs-comment">#将ssh密钥粘贴进去</span><br></code></pre></td></tr></table></figure><p>测试在Git Bash中使用<code>ssh git@你的服务器地址</code>连接服务器是否成功</p><p><strong>5. 创建git仓库并使用git-hooks实现自动部署</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> /var/repo <span class="hljs-comment"># 新建git仓库位置</span><br>sudo <span class="hljs-built_in">mkdir</span> /var/hexo <span class="hljs-comment"># 新建静态资源的目录</span><br><span class="hljs-built_in">cd</span> /var/repo<br>sudo git init --bare blog.git <span class="hljs-comment"># 创建一个名叫blog的仓库</span><br>sudo vim /var/repo/blog.git/hooks/post-update <span class="hljs-comment"># 配置hooks实现自动部署</span><br></code></pre></td></tr></table></figure><p>添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>git --work-tree=/var/hexo --git-dir=/var/repo/blog.git checkout -<br></code></pre></td></tr></table></figure><p>增加权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog.git/hooks/<br>sudo <span class="hljs-built_in">chown</span> -R git:git /var/repo/      <br>sudo <span class="hljs-built_in">chown</span> -R git:git /var/hexo         <br>sudo <span class="hljs-built_in">chmod</span> +x post-update<br></code></pre></td></tr></table></figure><p><strong>6. 配置nginx</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">// 查找 nginx 配置文件的路径<br>sudo nginx -t<br>输出：nginx: the configuration <span class="hljs-keyword">file</span> /etc/nginx/nginx.<span class="hljs-keyword">conf</span> <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">is</span> ok<br><span class="hljs-keyword">cd</span> /etc/nginx/<br><span class="hljs-built_in">mkdir</span> vhost<br><span class="hljs-keyword">cd</span> vhost<br>sudo <span class="hljs-keyword">vim</span> blog.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>添加内容：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">server</span>&#123;<br>        <span class="hljs-keyword">listen</span> <span class="hljs-number">80</span> default_server;<br>        <span class="hljs-keyword">listen</span> [::]:<span class="hljs-number">80</span> default_server;<br>        root /var/hexo;<br>        server_name 域名; <br>        <span class="hljs-keyword">location</span> /&#123;<br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo <span class="hljs-keyword">vim</span> /etc/nginx/nginx.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>在http模块下添加：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">include</span> <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/vhost/</span>*.conf;<br></code></pre></td></tr></table></figure><p>注意：这里设置的80端口和nginx默认页面的80端口冲突，可以将nginx默认页面的80端口注释掉</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">cd /etc/nginx/sites-available<br>sudo vim <span class="hljs-keyword">default</span><br></code></pre></td></tr></table></figure><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">server</span> &#123;<br>        <span class="hljs-meta"># listen 80 default_server;</span><br>        <span class="hljs-meta"># listen [::]:80 default_server;</span><br>        ...<br></code></pre></td></tr></table></figure><p>重新加载Nginx：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo systemctl reload nginx</span><br></code></pre></td></tr></table></figure><p><strong>7. 给git用户设置权限</strong></p><p>避免git用户通过ssh git@ip登录，也不能通过su git切换到git用户</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ sudo vim <span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-regexp">//</span> 修改最后一行<br><span class="hljs-regexp">//</span> 将<span class="hljs-regexp">/bin/</span>bash修改为<span class="hljs-regexp">/usr/</span>bin/git-shell<br></code></pre></td></tr></table></figure><p><strong>8. 本地hexo设置</strong></p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-comment">#vim config.yml</span><br><span class="hljs-attribute">deploy</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">type: git</span><br>    <span class="hljs-attribute">repo</span><span class="hljs-punctuation">:</span> <span class="hljs-string">github仓库的SSH地址</span><br>    <span class="hljs-attribute">branch</span><span class="hljs-punctuation">:</span> <span class="hljs-string">main</span><br><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">type: git</span><br>    <span class="hljs-attribute">repo</span><span class="hljs-punctuation">:</span> <span class="hljs-string">git@你的ip:/var/repo/blog.git</span><br>    <span class="hljs-attribute">branch</span><span class="hljs-punctuation">:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>hexo d 将本地博客推送至服务器和github</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li><a href="https://blog.csdn.net/yaorongke/article/details/119089190">GitHub Pages + Hexo搭建个人博客网站，史上最全教程</a></li><li><a href="https://arcsin2.cloud/2023/02/23/Hexo-%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/">Hexo 博客无法显示图片解决方法</a></li><li><a href="https://princehao.cn/posts/blog001/">Hexo+Fluid搭建个人博客网站</a></li><li><a href="https://zhuanlan.zhihu.com/p/453999928">结合 nginx + git 将 hexo 推送到云服务器</a></li><li><a href="https://zhuanlan.zhihu.com/p/83095214">通过Git将Hexo博客部署到服务器</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git和Github的使用</title>
    <link href="/Git%E4%B8%89%E5%89%91%E5%AE%A2/"/>
    <url>/Git%E4%B8%89%E5%89%91%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="1-Git安装"><a href="#1-Git安装" class="headerlink" title="1. Git安装"></a>1. Git安装</h3><p><a href="https://git-scm.com/">https://git-scm.com/</a></p><h3 id="2-Git-的工作机制"><a href="#2-Git-的工作机制" class="headerlink" title="2. Git 的工作机制"></a>2. Git 的工作机制</h3><img src="./Git三剑客/image-20231225185210032.png" alt="image-20231225185210032" style="zoom:80%;" /><h3 id="3-Git的常用命令"><a href="#3-Git的常用命令" class="headerlink" title="3. Git的常用命令"></a>3. Git的常用命令</h3><img src="./Git三剑客/image-20231225185311115.png" alt="image-20231225185311115" style="zoom:80%;" /><p><strong>查看签名：</strong>cat ~&#x2F;.gitconfig</p><p><strong>初始化本地库：</strong>git init</p><p><strong>查看本地库状态：</strong>git status</p><p><strong>新建文件（未追踪的文件，在工作区）：</strong></p><img src="./Git三剑客/image-20231225190122095.png" alt="image-20231225190122095" style="zoom:80%;" /><p><strong>添加暂存区：</strong>git add 文件名</p><img src="./Git三剑客/image-20231225190256293.png" alt="image-20231225190256293" style="zoom:80%;" /><p><strong>提交本地库：</strong>git commit -m “日志信息” 文件名</p><p><strong>修改文件：</strong></p><img src="./Git三剑客/image-20231225190728610.png" alt="image-20231225190728610" style="zoom:80%;" /><p><strong>查看版本号：</strong></p><img src="./Git三剑客/image-20231225190947555.png" alt="image-20231225190947555" style="zoom:80%;" /><p><strong>版本穿梭：</strong>git reset –hard 版本号</p><img src="./Git三剑客/image-20231225191214074.png" alt="image-20231225191214074" style="zoom:80%;" /><h3 id="4-Git分支操作"><a href="#4-Git分支操作" class="headerlink" title="4. Git分支操作"></a><strong>4. Git分支操作</strong></h3><img src="./Git三剑客/image-20231225191321323.png" alt="image-20231225191321323" style="zoom:80%;" /><p>创建的新的分支，会将主分支master的内容复制一份，之后切换到新的分支做修改了。</p><p><strong>合并分支：</strong></p><p>产生冲突的原因：合并分支时，两个分支在同一个文件的同一个位置有两套完全不同的修改。Git 无法替我们决定使用哪一个。必须人为决定新代码内容。</p><img src="./Git三剑客/image-20231225192752113.png" alt="image-20231225192752113" style="zoom:80%;" /><p>解决冲突</p><ul><li><p>编辑有冲突的文件，删除特殊符号，决定要使用的内容</p></li><li><p>特殊符号：&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD 当前分支的代码 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 合并过来的代码 &gt;&gt;&gt;&gt;&gt;&gt;&gt; hot-fix</p></li></ul><ul><li>添加到暂存区，重新提交（注意：此时使用 git commit 命令时不能带文件名）</li></ul><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><h3 id="1-创建远程仓库"><a href="#1-创建远程仓库" class="headerlink" title="1. 创建远程仓库"></a>1. 创建远程仓库</h3><p>(1) 点击GitHub首页右上角的“+”按钮，在弹出窗口选择“New respository”</p><p>(2) 输入仓库名，点击创建</p><h3 id="2-远程仓库操作"><a href="#2-远程仓库操作" class="headerlink" title="2. 远程仓库操作"></a>2. 远程仓库操作</h3><img src="./Git三剑客/image-20231225193734395.png" alt="image-20231225193734395" style="zoom:80%;" /><h3 id="3-GitHub免密登录"><a href="#3-GitHub免密登录" class="headerlink" title="3. GitHub免密登录"></a>3. GitHub免密登录</h3><p><strong>1. 在GitHub上创建仓库</strong></p><p>可参考<a href="https://princehao.cn/posts/blog001/">这篇博客的配置GitHubPages部分</a></p><p><strong>2. Github配置ssh key</strong></p><p>原理：本地生成一个公私钥对，将公钥放到远程主机，当本地主机需要登录远程主机时，远程主机用公钥对对一个随机字符串加密，并将结果发回本地主机。本地主机用私钥解密，将内容发回到远程主机，远程主机对比传回的字符串与生成的字符串，如果相同则认证成功。（公钥可以理解为锁，私钥是钥匙）</p><p>(1) 打开git bash，生成ssh key</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ssh-keygen -t rsa   <span class="hljs-comment">// 生成公钥</span><br>cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub <span class="hljs-comment">// 复制公钥</span><br></code></pre></td></tr></table></figure><p>(2) Github账号上添加公钥</p><p>点击settings-&gt;SSH and GPG kyes-&gt;new ssh key，将刚刚生成的公钥粘贴进去</p><p>(3) 验证设置是否成功</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li>尚硅谷技术课程系列之 Git</li></ol>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章 <code>erfji</code></p><img src="/2023/11/08/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png" class="">]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
